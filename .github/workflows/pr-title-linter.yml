name: PR Title Linter

on:
  pull_request:
    types: ["opened", "edited", "reopened", "synchronize"]

jobs:
  lint:
    name: Validate PR Title
    runs-on: ubuntu-latest
    if: ${{github.event.pull_request.base.ref == 'next'}}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: current
      - name : Check Title of PR
        uses: actions/github-script@v6
        id: pr-title-check
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          result-encoding: json
          script: |
            return ${{!contains(github.event.pull_request.title, 'fix:')}} &&
                ${{!contains(github.event.pull_request.title, 'feat:')}} &&
                ${{!contains(github.event.pull_request.title, 'chore:')}} &&
                ${{!contains(github.event.pull_request.title, 'docs:')}};
      - name: Get PR title and Update comment
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          result-encoding: json
          script: |
            // Retrieve existing bot comments for the PR
            const { data: comments } = await github.rest.issues.listComments({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
            });
            const botComment = comments.find(comment => {
              return comment.user.type === 'Bot' && comment.body.includes('Incorrect Pull Request Title Format')
            });

            if (${{steps.pr-title-check.outputs.result}}) {
              const output = `**Incorrect Pull Request Title Format**
               The title of this pull request does not appear to match the commit message format.
                \`\`\`
                feat: A new feature
                fix: A bug fix
                \`\`\`
                `;
              // If we have a comment, update it, otherwise create a new one
              if (botComment) {
                github.rest.issues.updateComment({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  comment_id: botComment.id,
                  body: output
                });
              } else {
                github.rest.issues.createComment({
                  issue_number: context.issue.number,
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  body: output
                });
              }
              return;
            }
            if (botComment) {
              github.rest.issues.deleteComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                comment_id: botComment.id
              });
            }
      - name: Lint PR Title Status
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          result-encoding: json
          script: |
            const hasError = ${{steps.pr-title-check.outputs.result}};
            if (hasError) {
              core.setFailed('hej');
            }
